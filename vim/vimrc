call plug#begin()
Plug 'ctrlpvim/ctrlp.vim'
Plug 'majutsushi/tagbar'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
"Plug 'roman/golden-ratio'
Plug 'Shougo/vimproc.vim', {'do' : 'make'}
Plug 'git@github.com:yplaksyuk/vim-vebugger.git', { 'branch': 'develop' }
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'neoclide/jsonc.vim'
call plug#end()

set encoding=utf-8
set nocompatible

syntax on
filetype plugin indent on

set number relativenumber
set numberwidth=5

set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab

set completeopt=menu,preview
set complete-=i

set laststatus=2
set modelines=5
set hlsearch
set incsearch

set path=**
set wildmenu
set wildmode=longest:full
set wildignore=*.swp,*/.git/*,*/docs/*,*/node_modules/*

set list
set listchars=tab:→\ ,nbsp:␣,trail:•,eol:¶,precedes:«
if v:version > 704
	set listchars+=space:·
endif
set fillchars+=vert:\ 
set cursorline

hi CursorLine cterm=NONE ctermbg=15
hi CursorLineNr cterm=NONE ctermbg=15
hi StatusLine ctermfg=8
hi SpecialKey ctermfg=15
hi NonText ctermfg=15
hi Pmenu ctermbg=7
hi PmenuSel ctermbg=8 ctermfg=15
hi Error ctermfg=0 ctermbg=203

set wildcharm=<C-z>
"nnoremap <tab>   :b <C-z>
nnoremap <tab>   :CtrlPBuffer<cr>
nnoremap <S-tab> :b#<cr>
nnoremap <cr>    :nohlsearch<cr>
nnoremap <f2>    :TagbarToggle<cr>
"nnoremap <f2>    :set relativenumber!<cr>
"nnoremap <f3>    :set list!<cr>
nnoremap <f6>   :cnext<cr>
nnoremap <f7>   :cprev<cr>
nnoremap <f9>   :VBGtoggleBreakpointThisLine<cr>
nnoremap <f10>  :VBGstepOver<cr>
nnoremap <f11>  :VBGstepIn<cr>
nnoremap <f12>  :VBGstepOut<cr>

nnoremap <leader>? :LspHover<cr>
nnoremap <leader>p :LspDefinition<cr>


inoremap {<cr> {<cr>}<esc>O

source ~/.vim/filetype.vim
source ~/.vim/project.vim

"command! MakeTags !ctags -R include/ src/
let g:ctrlp_working_path_mode = 'rwa'
let g:ctrlp_match_window = 'max:30,results:100'

let g:vebugger_view_source_cmd='edit'

let g:vdebug_options = {
			\	'on_close': 'stop',
			\	'continuous_mode': 0,
			\	'layout': 'horizontal',
			\}

let g:lsp_highlight_references_enabled = 1

function! GitBranch()
	return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

set statusline=[%n]\ %f%m%r%=%{GitBranch()}\ %{g:project_type}\ %l:%c\ %P\ [%{&fileformat}]

let s:vimrc=expand('<sfile>:p')

command! Vimrc execute 'edit ' . s:vimrc

